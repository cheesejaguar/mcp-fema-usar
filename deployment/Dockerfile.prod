# Production Dockerfile for FEMA USAR MCP Server
FROM python:3.11-slim as builder

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    make \
    libffi-dev \
    libssl-dev \
    libpq-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create and set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements/prod.txt requirements.txt
RUN pip install --user --no-warn-script-location -r requirements.txt

# Production stage
FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PATH="/home/app/.local/bin:${PATH}"
ENV ENVIRONMENT=production

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user
RUN groupadd -r app && useradd -r -g app app

# Create app directory and set ownership
RUN mkdir -p /app/data /app/logs /app/backups /app/certs \
    && chown -R app:app /app

# Set working directory
WORKDIR /app

# Copy Python packages from builder stage
COPY --from=builder --chown=app:app /root/.local /home/app/.local

# Copy application code
COPY --chown=app:app . .

# Create necessary directories and set permissions
RUN mkdir -p /app/temp \
    && chown -R app:app /app \
    && chmod -R 755 /app \
    && chmod 644 /app/fema_usar_mcp/*.py \
    && chmod 644 /app/fema_usar_mcp/tools/*.py \
    && chmod 644 /app/fema_usar_mcp/integrations/*.py

# Switch to non-root user
USER app

# Create health check script
RUN echo '#!/bin/bash\ncurl -f http://localhost:8000/health || exit 1' > /app/healthcheck.sh \
    && chmod +x /app/healthcheck.sh

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD ["/app/healthcheck.sh"]

# Start command
CMD ["python", "-m", "fema_usar_mcp.fastmcp_server"]